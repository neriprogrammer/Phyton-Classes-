{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f30a6dfc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from pandas_datareader import data as wb\n",
    "import matplotlib.pyplot as plit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b6ef24e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "MSFT = wb.DataReader('MSFT', data_source='yahoo', start='2000-1-1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4873da1b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2000-01-03</th>\n",
       "      <td>59.3125</td>\n",
       "      <td>56.00000</td>\n",
       "      <td>58.68750</td>\n",
       "      <td>58.28125</td>\n",
       "      <td>53228400.0</td>\n",
       "      <td>36.794216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-04</th>\n",
       "      <td>58.5625</td>\n",
       "      <td>56.12500</td>\n",
       "      <td>56.78125</td>\n",
       "      <td>56.31250</td>\n",
       "      <td>54119000.0</td>\n",
       "      <td>35.551296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-05</th>\n",
       "      <td>58.1875</td>\n",
       "      <td>54.68750</td>\n",
       "      <td>55.56250</td>\n",
       "      <td>56.90625</td>\n",
       "      <td>64059600.0</td>\n",
       "      <td>35.926144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-06</th>\n",
       "      <td>56.9375</td>\n",
       "      <td>54.18750</td>\n",
       "      <td>56.09375</td>\n",
       "      <td>55.00000</td>\n",
       "      <td>54976600.0</td>\n",
       "      <td>34.722702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-07</th>\n",
       "      <td>56.1250</td>\n",
       "      <td>53.65625</td>\n",
       "      <td>54.31250</td>\n",
       "      <td>55.71875</td>\n",
       "      <td>62013600.0</td>\n",
       "      <td>35.176445</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               High       Low      Open     Close      Volume  Adj Close\n",
       "Date                                                                    \n",
       "2000-01-03  59.3125  56.00000  58.68750  58.28125  53228400.0  36.794216\n",
       "2000-01-04  58.5625  56.12500  56.78125  56.31250  54119000.0  35.551296\n",
       "2000-01-05  58.1875  54.68750  55.56250  56.90625  64059600.0  35.926144\n",
       "2000-01-06  56.9375  54.18750  56.09375  55.00000  54976600.0  34.722702\n",
       "2000-01-07  56.1250  53.65625  54.31250  55.71875  62013600.0  35.176445"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MSFT.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fead72f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-07</th>\n",
       "      <td>307.839996</td>\n",
       "      <td>299.899994</td>\n",
       "      <td>306.170013</td>\n",
       "      <td>300.950012</td>\n",
       "      <td>28533300.0</td>\n",
       "      <td>300.950012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-08</th>\n",
       "      <td>305.559998</td>\n",
       "      <td>299.950012</td>\n",
       "      <td>301.250000</td>\n",
       "      <td>304.559998</td>\n",
       "      <td>32421200.0</td>\n",
       "      <td>304.559998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-09</th>\n",
       "      <td>311.929993</td>\n",
       "      <td>307.390015</td>\n",
       "      <td>309.869995</td>\n",
       "      <td>311.209991</td>\n",
       "      <td>31284700.0</td>\n",
       "      <td>311.209991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-10</th>\n",
       "      <td>309.119995</td>\n",
       "      <td>300.700012</td>\n",
       "      <td>304.040009</td>\n",
       "      <td>302.380005</td>\n",
       "      <td>45386200.0</td>\n",
       "      <td>302.380005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-11</th>\n",
       "      <td>304.290009</td>\n",
       "      <td>294.220001</td>\n",
       "      <td>303.190002</td>\n",
       "      <td>295.040009</td>\n",
       "      <td>39143900.0</td>\n",
       "      <td>295.040009</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High         Low        Open       Close      Volume  \\\n",
       "Date                                                                     \n",
       "2022-02-07  307.839996  299.899994  306.170013  300.950012  28533300.0   \n",
       "2022-02-08  305.559998  299.950012  301.250000  304.559998  32421200.0   \n",
       "2022-02-09  311.929993  307.390015  309.869995  311.209991  31284700.0   \n",
       "2022-02-10  309.119995  300.700012  304.040009  302.380005  45386200.0   \n",
       "2022-02-11  304.290009  294.220001  303.190002  295.040009  39143900.0   \n",
       "\n",
       "             Adj Close  \n",
       "Date                    \n",
       "2022-02-07  300.950012  \n",
       "2022-02-08  304.559998  \n",
       "2022-02-09  311.209991  \n",
       "2022-02-10  302.380005  \n",
       "2022-02-11  295.040009  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MSFT.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3f7a1048",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Date\n",
      "2000-01-03         NaN\n",
      "2000-01-04   -0.033780\n",
      "2000-01-05    0.010544\n",
      "2000-01-06   -0.033498\n",
      "2000-01-07    0.013068\n",
      "                ...   \n",
      "2022-02-07   -0.016310\n",
      "2022-02-08    0.011995\n",
      "2022-02-09    0.021835\n",
      "2022-02-10   -0.028373\n",
      "2022-02-11   -0.024274\n",
      "Name: simple_return, Length: 5565, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "MSFT['simple_return'] = (MSFT['Adj Close'] / MSFT['Adj Close'].shift(1)) - 1\n",
    "print(MSFT['simple_return'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2084a47b",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'TSLA' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-9-99c105048125>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mTSLA\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'simple_return'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mTSLA\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'Adj Close'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m/\u001b[0m \u001b[0mMSFT\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'Adj Close'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m-\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mMSFT\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'simple_return'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'TSLA' is not defined"
     ]
    }
   ],
   "source": [
    "#Taxa simples de retorno \n",
    "\n",
    "MSFT['simple_return'] = (MSFT['Adj Close'] / MSFT['Adj Close'].shift(1)) - 1\n",
    "print(MSFT['simple_return'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e28087e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "TSLA = wb.DataReader('TSLA', data_source='yahoo', start='2019-1-1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "404fa0ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-01-02</th>\n",
       "      <td>63.026001</td>\n",
       "      <td>59.759998</td>\n",
       "      <td>61.220001</td>\n",
       "      <td>62.023998</td>\n",
       "      <td>58293000.0</td>\n",
       "      <td>62.023998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-01-03</th>\n",
       "      <td>61.880001</td>\n",
       "      <td>59.476002</td>\n",
       "      <td>61.400002</td>\n",
       "      <td>60.071999</td>\n",
       "      <td>34826000.0</td>\n",
       "      <td>60.071999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-01-04</th>\n",
       "      <td>63.599998</td>\n",
       "      <td>60.546001</td>\n",
       "      <td>61.200001</td>\n",
       "      <td>63.537998</td>\n",
       "      <td>36970500.0</td>\n",
       "      <td>63.537998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-01-07</th>\n",
       "      <td>67.348000</td>\n",
       "      <td>63.549999</td>\n",
       "      <td>64.344002</td>\n",
       "      <td>66.991997</td>\n",
       "      <td>37756000.0</td>\n",
       "      <td>66.991997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-01-08</th>\n",
       "      <td>68.802002</td>\n",
       "      <td>65.403999</td>\n",
       "      <td>68.391998</td>\n",
       "      <td>67.070000</td>\n",
       "      <td>35042500.0</td>\n",
       "      <td>67.070000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-07</th>\n",
       "      <td>947.770020</td>\n",
       "      <td>902.710022</td>\n",
       "      <td>923.789978</td>\n",
       "      <td>907.340027</td>\n",
       "      <td>20331500.0</td>\n",
       "      <td>907.340027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-08</th>\n",
       "      <td>926.289978</td>\n",
       "      <td>894.799988</td>\n",
       "      <td>905.530029</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>16909700.0</td>\n",
       "      <td>922.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-09</th>\n",
       "      <td>946.270020</td>\n",
       "      <td>920.000000</td>\n",
       "      <td>935.000000</td>\n",
       "      <td>932.000000</td>\n",
       "      <td>17419800.0</td>\n",
       "      <td>932.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-10</th>\n",
       "      <td>943.809998</td>\n",
       "      <td>896.700012</td>\n",
       "      <td>908.369995</td>\n",
       "      <td>904.549988</td>\n",
       "      <td>22042300.0</td>\n",
       "      <td>904.549988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-11</th>\n",
       "      <td>915.960022</td>\n",
       "      <td>850.700012</td>\n",
       "      <td>909.630005</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>26492700.0</td>\n",
       "      <td>860.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>786 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High         Low        Open       Close      Volume  \\\n",
       "Date                                                                     \n",
       "2019-01-02   63.026001   59.759998   61.220001   62.023998  58293000.0   \n",
       "2019-01-03   61.880001   59.476002   61.400002   60.071999  34826000.0   \n",
       "2019-01-04   63.599998   60.546001   61.200001   63.537998  36970500.0   \n",
       "2019-01-07   67.348000   63.549999   64.344002   66.991997  37756000.0   \n",
       "2019-01-08   68.802002   65.403999   68.391998   67.070000  35042500.0   \n",
       "...                ...         ...         ...         ...         ...   \n",
       "2022-02-07  947.770020  902.710022  923.789978  907.340027  20331500.0   \n",
       "2022-02-08  926.289978  894.799988  905.530029  922.000000  16909700.0   \n",
       "2022-02-09  946.270020  920.000000  935.000000  932.000000  17419800.0   \n",
       "2022-02-10  943.809998  896.700012  908.369995  904.549988  22042300.0   \n",
       "2022-02-11  915.960022  850.700012  909.630005  860.000000  26492700.0   \n",
       "\n",
       "             Adj Close  \n",
       "Date                    \n",
       "2019-01-02   62.023998  \n",
       "2019-01-03   60.071999  \n",
       "2019-01-04   63.537998  \n",
       "2019-01-07   66.991997  \n",
       "2019-01-08   67.070000  \n",
       "...                ...  \n",
       "2022-02-07  907.340027  \n",
       "2022-02-08  922.000000  \n",
       "2022-02-09  932.000000  \n",
       "2022-02-10  904.549988  \n",
       "2022-02-11  860.000000  \n",
       "\n",
       "[786 rows x 6 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TSLA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a6900a90",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Date\n",
      "2019-01-02         NaN\n",
      "2019-01-03   -0.031472\n",
      "2019-01-04    0.057697\n",
      "2019-01-07    0.054361\n",
      "2019-01-08    0.001164\n",
      "                ...   \n",
      "2022-02-07   -0.017307\n",
      "2022-02-08    0.016157\n",
      "2022-02-09    0.010846\n",
      "2022-02-10   -0.029453\n",
      "2022-02-11   -0.049251\n",
      "Name: simple_return, Length: 786, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "TSLA['simple_return'] = (TSLA['Adj Close'] / TSLA['Adj Close'].shift(1)) - 1\n",
    "print(TSLA['simple_return'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ef6d9432",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>simple_return</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-07</th>\n",
       "      <td>947.770020</td>\n",
       "      <td>902.710022</td>\n",
       "      <td>923.789978</td>\n",
       "      <td>907.340027</td>\n",
       "      <td>20331500.0</td>\n",
       "      <td>907.340027</td>\n",
       "      <td>-0.017307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-08</th>\n",
       "      <td>926.289978</td>\n",
       "      <td>894.799988</td>\n",
       "      <td>905.530029</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>16909700.0</td>\n",
       "      <td>922.000000</td>\n",
       "      <td>0.016157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-09</th>\n",
       "      <td>946.270020</td>\n",
       "      <td>920.000000</td>\n",
       "      <td>935.000000</td>\n",
       "      <td>932.000000</td>\n",
       "      <td>17419800.0</td>\n",
       "      <td>932.000000</td>\n",
       "      <td>0.010846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-10</th>\n",
       "      <td>943.809998</td>\n",
       "      <td>896.700012</td>\n",
       "      <td>908.369995</td>\n",
       "      <td>904.549988</td>\n",
       "      <td>22042300.0</td>\n",
       "      <td>904.549988</td>\n",
       "      <td>-0.029453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-11</th>\n",
       "      <td>915.960022</td>\n",
       "      <td>850.700012</td>\n",
       "      <td>909.630005</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>26492700.0</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>-0.049251</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High         Low        Open       Close      Volume  \\\n",
       "Date                                                                     \n",
       "2022-02-07  947.770020  902.710022  923.789978  907.340027  20331500.0   \n",
       "2022-02-08  926.289978  894.799988  905.530029  922.000000  16909700.0   \n",
       "2022-02-09  946.270020  920.000000  935.000000  932.000000  17419800.0   \n",
       "2022-02-10  943.809998  896.700012  908.369995  904.549988  22042300.0   \n",
       "2022-02-11  915.960022  850.700012  909.630005  860.000000  26492700.0   \n",
       "\n",
       "             Adj Close  simple_return  \n",
       "Date                                   \n",
       "2022-02-07  907.340027      -0.017307  \n",
       "2022-02-08  922.000000       0.016157  \n",
       "2022-02-09  932.000000       0.010846  \n",
       "2022-02-10  904.549988      -0.029453  \n",
       "2022-02-11  860.000000      -0.049251  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TSLA.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "e2faf6e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "TSLA['simple_return'].plot(figsize=(8,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f8489d31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.004254584582977191"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg_returns_d = TSLA['simple_return'].mean()\n",
    "avg_returns_d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5e675f9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0636461457442978"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg_returns_a = TSLA['simple_return'].mean() * 250\n",
    "avg_returns_a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "634f6825",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "106.365 %\n"
     ]
    }
   ],
   "source": [
    "print (str(round(avg_returns_a,5) * 100)+ ' %') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "e039e86f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "MSFT['simple_return'].plot(figsize=(8,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "853e4eb1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Taxa Logaritmica de retorno\n",
    "FB = wb.DataReader('FB', data_source='yahoo', start='2015-1-1')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "794df1f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2015-01-02</th>\n",
       "      <td>78.930000</td>\n",
       "      <td>77.699997</td>\n",
       "      <td>78.580002</td>\n",
       "      <td>78.449997</td>\n",
       "      <td>18177500</td>\n",
       "      <td>78.449997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-01-05</th>\n",
       "      <td>79.250000</td>\n",
       "      <td>76.860001</td>\n",
       "      <td>77.980003</td>\n",
       "      <td>77.190002</td>\n",
       "      <td>26452200</td>\n",
       "      <td>77.190002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-01-06</th>\n",
       "      <td>77.589996</td>\n",
       "      <td>75.360001</td>\n",
       "      <td>77.230003</td>\n",
       "      <td>76.150002</td>\n",
       "      <td>27399300</td>\n",
       "      <td>76.150002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-01-07</th>\n",
       "      <td>77.360001</td>\n",
       "      <td>75.820000</td>\n",
       "      <td>76.760002</td>\n",
       "      <td>76.150002</td>\n",
       "      <td>22045300</td>\n",
       "      <td>76.150002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-01-08</th>\n",
       "      <td>78.230003</td>\n",
       "      <td>76.080002</td>\n",
       "      <td>76.739998</td>\n",
       "      <td>78.180000</td>\n",
       "      <td>23961000</td>\n",
       "      <td>78.180000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-07</th>\n",
       "      <td>238.300003</td>\n",
       "      <td>224.009995</td>\n",
       "      <td>237.699997</td>\n",
       "      <td>224.910004</td>\n",
       "      <td>88613800</td>\n",
       "      <td>224.910004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-08</th>\n",
       "      <td>225.770004</td>\n",
       "      <td>216.149994</td>\n",
       "      <td>220.850006</td>\n",
       "      <td>220.179993</td>\n",
       "      <td>94729700</td>\n",
       "      <td>220.179993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-09</th>\n",
       "      <td>233.369995</td>\n",
       "      <td>222.210007</td>\n",
       "      <td>224.199997</td>\n",
       "      <td>232.000000</td>\n",
       "      <td>86563300</td>\n",
       "      <td>232.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-10</th>\n",
       "      <td>235.000000</td>\n",
       "      <td>226.699997</td>\n",
       "      <td>228.270004</td>\n",
       "      <td>228.070007</td>\n",
       "      <td>49310400</td>\n",
       "      <td>228.070007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-11</th>\n",
       "      <td>230.419998</td>\n",
       "      <td>218.770004</td>\n",
       "      <td>228.460007</td>\n",
       "      <td>219.550003</td>\n",
       "      <td>46101900</td>\n",
       "      <td>219.550003</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1792 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High         Low        Open       Close    Volume  \\\n",
       "Date                                                                   \n",
       "2015-01-02   78.930000   77.699997   78.580002   78.449997  18177500   \n",
       "2015-01-05   79.250000   76.860001   77.980003   77.190002  26452200   \n",
       "2015-01-06   77.589996   75.360001   77.230003   76.150002  27399300   \n",
       "2015-01-07   77.360001   75.820000   76.760002   76.150002  22045300   \n",
       "2015-01-08   78.230003   76.080002   76.739998   78.180000  23961000   \n",
       "...                ...         ...         ...         ...       ...   \n",
       "2022-02-07  238.300003  224.009995  237.699997  224.910004  88613800   \n",
       "2022-02-08  225.770004  216.149994  220.850006  220.179993  94729700   \n",
       "2022-02-09  233.369995  222.210007  224.199997  232.000000  86563300   \n",
       "2022-02-10  235.000000  226.699997  228.270004  228.070007  49310400   \n",
       "2022-02-11  230.419998  218.770004  228.460007  219.550003  46101900   \n",
       "\n",
       "             Adj Close  \n",
       "Date                    \n",
       "2015-01-02   78.449997  \n",
       "2015-01-05   77.190002  \n",
       "2015-01-06   76.150002  \n",
       "2015-01-07   76.150002  \n",
       "2015-01-08   78.180000  \n",
       "...                ...  \n",
       "2022-02-07  224.910004  \n",
       "2022-02-08  220.179993  \n",
       "2022-02-09  232.000000  \n",
       "2022-02-10  228.070007  \n",
       "2022-02-11  219.550003  \n",
       "\n",
       "[1792 rows x 6 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "FB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "fe445495",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Date\n",
      "2015-01-02         NaN\n",
      "2015-01-05   -0.016191\n",
      "2015-01-06   -0.013565\n",
      "2015-01-07    0.000000\n",
      "2015-01-08    0.026309\n",
      "                ...   \n",
      "2022-02-07   -0.052739\n",
      "2022-02-08   -0.021255\n",
      "2022-02-09    0.052292\n",
      "2022-02-10   -0.017085\n",
      "2022-02-11   -0.038073\n",
      "Name: log_return, Length: 1792, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "FB['log_return'] = np.log(FB['Adj Close'] / FB['Adj Close'].shift(1))\n",
    "print (FB['log_return'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "7472129e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "FB['log_return'].plot(figsize=(8,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "ee6e5fb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0005746055670739334"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_return_d = FB['log_return'].mean()\n",
    "log_return_d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ccc835c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.14365139176848335"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_return_a = FB['log_return'].mean() * 250\n",
    "log_return_a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "4490495b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14.365%\n"
     ]
    }
   ],
   "source": [
    "print (str(round(log_return_d, 5) *100) + '%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34cd6016",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
